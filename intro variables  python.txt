intro variables python
importar: print("hola mundo")

int:numero, str:letras float:numeros con decimales dict:{} tuple:() list()


se puede poner escribir variables en una linea:
x, y, z = "Orange", "Banana", "Cherry"
print(x)
print(y)
print(z)

Y puede asignar el mismo valor a varias variables en una línea:
x = y = z = "Orange"
print(x) #orange
print(y) #orange
print(z) #orange

Si tiene una colección de valores en una lista, tupla, etc. Python le permite extraer los valores en variables. A esto se le llama desempaquetar.

Descomprimir una lista:
fruits = ["apple", "banana", "cherry"] #tuple cuando es on ()
x, y, z = fruits
print(x)
print(y)
print(z)

La función Python se utiliza a menudo para generar variables.print()
Ejemplo
x = "Python es lo mejor"
print(x) #Python es lo mejor

En la función, se generan varios variables, separadas por una coma:print()

x = "Python"
y = "es"
z = "lo mejor"
print(x, y, z) #Python es lo mejor

def se utiliza para definir una funcion 
Las variables globales pueden ser utilizadas por todo el mundo, tanto dentro de funciones y exteriores.

Cree una variable fuera de una función y utilícela dentro de la función: (local)

x = "increible"

def myfunc():
  print("Python es " + x) #Python es increible

myfunc()

Normalmente, cuando se crea una variable dentro de una función, esa variable es local, y solo se puede usar dentro de esa función.Para crear una variable global dentro de una función, puede utilizar la palabra clave(global)

Si utiliza la palabra clave, la variable pertenece al ámbito global:global

def myfunc():
  global x
  x = "fantastico"
myfunc()
print("Python es " + x) #Python es fantastico

Para cambiar el valor de una variable global dentro de una función, consulte la variable mediante el uso de la palabra clave:global

x = "mejor"

def myfunc():
  global x
  x = "fantastico"

myfunc()

print("Python es " + x) #Python es fantatico
